{{ config(materialized='table') }}

select 
	 POS,					
	 Name,					
	 ORG,					
	 Lev,					
	 HT,					
	 B,					
	 T,					
	 OVR,					
	 BABIP,					
	 CON,					
	 GAP,					
	 POW,					
	 EYE,					
	 Ks,					
	 BABIP_vL,					
	 CON_vL,					
	 GAP_vL,					
	 POW_vL,					
	 EYE_vL,					
	 K_vL,					
	 BABIP_vR,					
	 CON_vR,					
	 GAP_vR,					
	 POW_vR,					
	 EYE_vR,					
	 K_vR,					
	 BUN,					
	 BFH,					
	 BBT,					
	 GBT,					
	 FBT,					
	 C_ABI,					
	 C_ARM,					
	 IF_RNG,					
	 IF_ERR,					
	 IF_ARM,					
	 TDP,					
	 OF_RNG,					
	 OF_ERR,					
	 OF_ARM,					
	 DEF,					
	 P,					
	 C,					
	 `1B`,					
	 `2B`,					
	 `3B`,					
	 SS,					
	 LF,					
	 CF,					
	 RF,					
	 SPE,					
	 STE,					
	 RUN,					
SUM(	 G	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 G,
SUM(	 GS	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 GS,
SUM(	 PA	) as 				 PA,
SUM(	 AB	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 AB,
SUM(	 H	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 H,
SUM(	 `1B_other`	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 `1B_other`,
SUM(	 `2B_other`	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 `2B_other`,
SUM(	 `3B_other`	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 `3B_other`,
SUM(	 HR	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 HR,
SUM(	 RBI	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 RBI,
SUM(	 R	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 R,
SUM(	 BB	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 BB,
SUM(	 IBB	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 IBB,
SUM(	 HP	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 HP,
SUM(	 SH	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 SH,
SUM(	 SF	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 SF,
SUM(	 CI	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 CI,
SUM(	 SO	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 SO,
SUM(	 GIDP	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 GIDP,
SUM(	 EBH	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 EBH,
SUM(	 TB	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 TB,
SUM(	 AVG	*PA)/NULLIF(SUM(PA*PA),0) as 				 AVG,
SUM(	 OBP	*PA)/NULLIF(SUM(PA*PA),0) as 				 OBP,
SUM(	 SLG	*PA)/NULLIF(SUM(PA*PA),0) as 				 SLG,
SUM(	 RC	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 RC,
SUM(	 `RC/27`	*PA)/NULLIF(SUM(PA*PA),0) as 				 `RC/27`,
SUM(	 ISO	*PA)/NULLIF(SUM(PA*PA),0) as 				 ISO,
SUM(	 wOBA	*PA)/NULLIF(SUM(PA*PA),0) as 				 wOBA,
SUM(	 OPS	*PA)/NULLIF(SUM(PA*PA),0) as 				 OPS,
SUM(	 `OPS+`	*PA)/NULLIF(SUM(PA*PA),0) as 				 `OPS+`,
SUM(	 `BABIP_other`	*PA)/NULLIF(SUM(PA*PA),0) as 				 `BABIP_stat`,
SUM(	 WPA	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 WPA,
SUM(	 wRC	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 wRC,
SUM(	 `wRC+`	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 `wRC+`,
SUM(	 wRAA	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 wRAA,
SUM(	 WAR	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 WAR,
SUM(	 `PI/PA`	*PA)/NULLIF(SUM(PA*PA),0) as 				 `PI/PA`,
SUM(	 SB	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 SB,
SUM(	 CS	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 CS,
SUM(	 BatR	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 BatR,
SUM(	 wSB	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 wSB,
SUM(	 UBR	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 UBR,
SUM(	 BsR	*PA)/NULLIF(SUM(PA*PA),0)*600 as 				 BsR,
SUM(	 `G_other`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `G_def`,
SUM(	 `GS_other`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `GS_def`,
SUM(	 TC	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 TC,
SUM(	 A	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 A,
SUM(	 PO	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 PO,
SUM(	 E	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 E,
SUM(	 DP	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 DP,
SUM(	 TP	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 TP,
SUM(	 PCT	*IP)/NULLIF(SUM(IP*IP),0) as 				 PCT,
SUM(	 RNG	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 RNG,
SUM(	 ZR	*IP)/NULLIF(SUM(IP*IP),0) as 				 ZR,
SUM(	 EFF	*IP)/NULLIF(SUM(IP*IP),0) as 				 EFF,
SUM(	 SBA	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 SBA,
SUM(	 RTO	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 RTO,
SUM(	 IP	) as 				 IP,
SUM(	 PB	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 PB,
SUM(	 CER	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 CER,
SUM(	 CERA	*IP)/NULLIF(SUM(IP*IP),0) as 				 CERA,
SUM(	 `BIZ_R_perc`	*IP)/NULLIF(SUM(IP*IP),0) as 				 `BIZ_R_perc`,
SUM(	 `BIZ_R`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `BIZ_R`,
SUM(	 `BIZ_Rm`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `BIZ_Rm`,
SUM(	 `BIZ_L_perc`	*IP)/NULLIF(SUM(IP*IP),0) as 				 `BIZ_L_perc`,
SUM(	 `BIZ_L`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `BIZ_L`,
SUM(	 `BIZ_Lm`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `BIZ_Lm`,
SUM(	 `BIZ_E_perc`	*IP)/NULLIF(SUM(IP*IP),0) as 				 `BIZ_E_perc`,
SUM(	 `BIZ_E`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `BIZ_E`,
SUM(	 `BIZ_Em`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `BIZ_Em`,
SUM(	 `BIZ_U_perc`	*IP)/NULLIF(SUM(IP*IP),0) as 				 `BIZ_U_perc`,
SUM(	 `BIZ_U`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `BIZ_U`,
SUM(	 `BIZ_Um`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `BIZ_Um`,
SUM(	 `BIZ_Z_perc`	*IP)/NULLIF(SUM(IP*IP),0) as 				 `BIZ_Z_perc`,
SUM(	 `BIZ_Z`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `BIZ_Z`,
SUM(	 `BIZ_Zm`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `BIZ_Zm`,
SUM(	 `BIZ_I`	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 `BIZ_I`,
SUM(	 FRM	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 FRM,
SUM(	 ARM	*IP)/NULLIF(SUM(IP*IP),0)*1200 as 				 ARM,
SUM(	 `BF_perc`	*IP)/NULLIF(SUM(IP*IP),0) as 				 `BF_perc`
from {{ ref('stg_batters_types') }}
group by
	 POS,					
	 Name,					
	 ORG,					
	 Lev,					
	 HT,					
	 B,					
	 T,					
	 OVR,					
	 BABIP,					
	 CON,					
	 GAP,					
	 POW,					
	 EYE,					
	 Ks,					
	 BABIP_vL,					
	 CON_vL,					
	 GAP_vL,					
	 POW_vL,					
	 EYE_vL,					
	 K_vL,					
	 BABIP_vR,					
	 CON_vR,					
	 GAP_vR,					
	 POW_vR,					
	 EYE_vR,					
	 K_vR,					
	 BUN,					
	 BFH,					
	 BBT,					
	 GBT,					
	 FBT,					
	 C_ABI,					
	 C_ARM,					
	 IF_RNG,					
	 IF_ERR,					
	 IF_ARM,					
	 TDP,					
	 OF_RNG,					
	 OF_ERR,					
	 OF_ARM,					
	 DEF,					
	 P,					
	 C,					
	 `1B`,					
	 `2B`,					
	 `3B`,					
	 SS,					
	 LF,					
	 CF,					
	 RF,					
	 SPE,					
	 STE,					
	 RUN